// Basic if statement parsing tests
// All tests in main() with proper variable declarations

fn main() -> void {

    // Test 13: Logical AND condition
    let x: i32; let y: i32; let z: i32; let result: i32; let a: i32; let b: i32;
    if ((x > 0)) && (y > 0) {
        result = 1;
    }
    // Test 14: Logical OR condition  
    if (x < 0 || y < 0) {
        result = -1;
    }
    let flag: bool = true; let condition: bool = true; let outer_condition: bool = true; let inner_condition: bool = false;
    // Test 15: Logical NOT condition
    if (!flag) {
        result = 0;
    }
    // Test 16: Parenthesized complex condition
    if ((x > 5 && y < 10) || flag) {
        result = 42;
    }
    // Test 17: Multiple statements in if block
    if (true) {
        x = 1;
        y = 2;
        z = x + y;
    }
    // Test 18: Multiple statements in both branches
    if (condition) {
        a = 1;
        b = 2;
    } else {
        a = 3;
        b = 4;
    }
    // Test 19: Longer else-if chain
    if (x == 1) {
        result = 1;
    } else if (x == 2) {
        result = 2;
    } else if (x == 3) {
        result = 3;
    } else {
        result = 99;
    }
    // Test 20: Dangling else case (else should bind to inner if)
    if (outer_condition) {
        if (inner_condition) {
            x = 1;
        } else {
            x = 2;
        }
        
    }

}

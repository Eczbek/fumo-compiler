//t(
//"var.this;\n"
//"var->this;\n"
//"var();\n"
//"var(this, this, this);\n"
//"var::another;\n"
//,pass),
//t(
//"var.this.that;\n"
//"var->this->that;\n"
//"var.this->that;\n"
//"var->this.that;\n"
//,pass),
//t(
//"var.this(thing, thing);\n"
//"var.this();\n"
//"var->this();\n"
//"var->this()->another;\n"
//,pass),
//t(
//"var::one::two.three->func(this, that->other.gaming(), lasthting);\n"
//,pass),
t(
"struct foo {\n"
"    fn func(x: i32) -> i32;\n"
"    fn bar(x: i32) -> i32;\n"
"};\n"
"fn foo::func(x: i32) -> i32 {\n"
"    foo::bar();\n"
"    return x;\n"
"}\n"
,fail),
t(
"struct foo {\n"
"    fn func(x: i32) -> i32;\n"
"};\n"
"fn somefunc() -> void {\n"
"    let x:i32 = foo::func();\n"
"}\n"
,fail),
t(
"struct foo {\n"
"    fn func(x: i32) -> i32;\n"
"};\n"
"fn somefunc() -> void {\n"
"    let var: foo = {};\n"
"    let x: i32 = var.func();\n"
"}\n"
,pass),
t(
"struct foo {\n"
"    struct gaming {fn some() -> i32;};\n"
"    struct bar {\n"
"       fn func(x: i32) -> gaming;\n"
"    };\n"
"    fn some_func() -> void;\n"
"};\n"
"fn foo::some_func() -> void {\n"
"    let var: bar = {};\n"
"    let y: i32 = var.func().some();\n"
"}\n"
,pass),

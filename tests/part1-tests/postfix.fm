t(
"struct foo {\n"
"    fn func(x: i32) -> i32;\n"
"    fn bar(x: i32) -> i32;\n"
"};\n"
"fn foo::func(x: i32) -> i32 {\n"
"    foo::bar();\n"
"    return x;\n"
"}\n"
,fail),
t(
"struct foo {\n"
"    fn func(x: i32) -> i32;\n"
"};\n"
"fn somefunc() -> void {\n"
"    let x:i32 = foo::func();\n"
"}\n"
,fail),
t(
"struct foo {\n"
"    fn func(x: i32) -> i32{return 213;}\n"
"    let some: i32 = 124;\n"
"};\n"
"fn somefunc() -> void {\n"
"    let var: foo = {};\n"
"    var.some = 3;\n"
"    let x: i32 = var.func();\n"
"}\n"
,fail),
t(
"struct foo {\n"
"   fn foo::func(x: i32) -> gaming;\n"
"};\n"
,fail),
t(
"namespace foo {\n"
"   struct foo {\n"
"        struct gaming {\n"
"           let xee: i32 = 213; \n"
"           fn ahhh() -> i32 {return xee;} \n"
"           fn some() -> i32 {return ahhh();} \n"
"        };\n"
"        struct bar {\n"
"           fn func(x: i32) -> gaming; \n"
"        };\n"
"        fn another_func() -> void {let x: i32 = 213;}\n"
"        fn some_func() -> void;\n"
"    };\n"
"}\n"
"fn foo::foo::bar::func(x: i32) -> gaming {let var = gaming {x};}\n"
"fn foo::foo::some_func() -> void {\n"
"    {\n"
"        another_func();\n"
"    }\n"
"    let var: bar = {};\n"
"    let eee: gaming = {212322};\n"
"    let e_ptr: gaming* = eee;\n"
"    let y = var.func(e_ptr->xee).some();\n"
"}\n"
,pass),
t(
"namespace gaming {\n"
"struct foo {};\n"
"}\n"
"fn huh(e: i32) -> void {}\n"
"fn gaming::fff() -> void {\n"
"    let var: foo = {};\n"
"    huh(var);\n"
"}\n"
,fail),
